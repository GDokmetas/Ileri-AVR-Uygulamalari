
AVRADV11_I2CEEPROM_UART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800100  00000aa8  00000b3c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000aa8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000045  00800126  00800126  00000b62  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b62  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000bc0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000120  00000000  00000000  00000c00  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012e7  00000000  00000000  00000d20  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009f8  00000000  00000000  00002007  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009c3  00000000  00000000  000029ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002c8  00000000  00000000  000033c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000644  00000000  00000000  0000368c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d92  00000000  00000000  00003cd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00004a62  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 d3 01 	jmp	0x3a6	; 0x3a6 <__vector_18>
  4c:	0c 94 01 02 	jmp	0x402	; 0x402 <__vector_19>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 ea       	ldi	r30, 0xA8	; 168
  7c:	fa e0       	ldi	r31, 0x0A	; 10
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 32       	cpi	r26, 0x26	; 38
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e2       	ldi	r26, 0x26	; 38
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ab 36       	cpi	r26, 0x6B	; 107
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 ff 00 	call	0x1fe	; 0x1fe <main>
  9e:	0c 94 52 05 	jmp	0xaa4	; 0xaa4 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <eeprom_write_8bit>:
 */ 
#include "i2c24c32.h"
#include "i2cmaster.h"
#include "uart.h"
void eeprom_write_8bit(uint16_t address, uint8_t data)
{
  a6:	1f 93       	push	r17
  a8:	cf 93       	push	r28
  aa:	df 93       	push	r29
  ac:	d8 2f       	mov	r29, r24
  ae:	19 2f       	mov	r17, r25
  b0:	c6 2f       	mov	r28, r22
	uint8_t high_byte = address >> 8;
	uint8_t low_byte = address & 0x00FF;
	i2c_start_wait(EEPROM_ADDR+I2C_WRITE);
  b2:	80 ea       	ldi	r24, 0xA0	; 160
  b4:	0e 94 82 01 	call	0x304	; 0x304 <i2c_start_wait>
	i2c_write(high_byte);
  b8:	81 2f       	mov	r24, r17
  ba:	0e 94 b6 01 	call	0x36c	; 0x36c <i2c_write>
	i2c_write(low_byte);
  be:	8d 2f       	mov	r24, r29
  c0:	0e 94 b6 01 	call	0x36c	; 0x36c <i2c_write>
	i2c_write(data);
  c4:	8c 2f       	mov	r24, r28
  c6:	0e 94 b6 01 	call	0x36c	; 0x36c <i2c_write>
	i2c_stop();
  ca:	0e 94 ad 01 	call	0x35a	; 0x35a <i2c_stop>
}
  ce:	df 91       	pop	r29
  d0:	cf 91       	pop	r28
  d2:	1f 91       	pop	r17
  d4:	08 95       	ret

000000d6 <eeprom_read_8bit>:

uint8_t eeprom_read_8bit(uint16_t address)
{
  d6:	cf 93       	push	r28
  d8:	df 93       	push	r29
  da:	c8 2f       	mov	r28, r24
  dc:	d9 2f       	mov	r29, r25
	uint8_t veri;
	uint8_t high_byte = address >> 8;
	uint8_t low_byte = address & 0x00FF;
	i2c_start_wait(EEPROM_ADDR+I2C_WRITE);
  de:	80 ea       	ldi	r24, 0xA0	; 160
  e0:	0e 94 82 01 	call	0x304	; 0x304 <i2c_start_wait>
	i2c_write(high_byte);
  e4:	8d 2f       	mov	r24, r29
  e6:	0e 94 b6 01 	call	0x36c	; 0x36c <i2c_write>
	i2c_write(low_byte);
  ea:	8c 2f       	mov	r24, r28
  ec:	0e 94 b6 01 	call	0x36c	; 0x36c <i2c_write>
	i2c_rep_start(EEPROM_ADDR+I2C_READ);
  f0:	81 ea       	ldi	r24, 0xA1	; 161
  f2:	0e 94 aa 01 	call	0x354	; 0x354 <i2c_rep_start>
	veri = i2c_readNak();
  f6:	0e 94 c8 01 	call	0x390	; 0x390 <i2c_readNak>
  fa:	c8 2f       	mov	r28, r24
	i2c_stop();
  fc:	0e 94 ad 01 	call	0x35a	; 0x35a <i2c_stop>
	return veri;
}
 100:	8c 2f       	mov	r24, r28
 102:	df 91       	pop	r29
 104:	cf 91       	pop	r28
 106:	08 95       	ret

00000108 <eeprom_write_16bit>:

void eeprom_write_16bit(uint16_t address, uint16_t data)
{
 108:	1f 93       	push	r17
 10a:	cf 93       	push	r28
 10c:	df 93       	push	r29
 10e:	ec 01       	movw	r28, r24
 110:	16 2f       	mov	r17, r22
 112:	67 2f       	mov	r22, r23
	uint8_t high_data = data >> 8;
	uint8_t low_data = data & 0x00FF;
	eeprom_write_8bit(address, high_data);
 114:	0e 94 53 00 	call	0xa6	; 0xa6 <eeprom_write_8bit>
	address++;
	eeprom_write_8bit(address,low_data);
 118:	61 2f       	mov	r22, r17
 11a:	ce 01       	movw	r24, r28
 11c:	01 96       	adiw	r24, 0x01	; 1
 11e:	0e 94 53 00 	call	0xa6	; 0xa6 <eeprom_write_8bit>
}
 122:	df 91       	pop	r29
 124:	cf 91       	pop	r28
 126:	1f 91       	pop	r17
 128:	08 95       	ret

0000012a <eeprom_read_16bit>:

 uint16_t eeprom_read_16bit(uint16_t address)
 {
 12a:	0f 93       	push	r16
 12c:	1f 93       	push	r17
 12e:	cf 93       	push	r28
 130:	8c 01       	movw	r16, r24
	 uint8_t high_data = eeprom_read_8bit(address);
 132:	0e 94 6b 00 	call	0xd6	; 0xd6 <eeprom_read_8bit>
 136:	c8 2f       	mov	r28, r24
	 address++;
	 uint8_t low_data = eeprom_read_8bit(address);
 138:	c8 01       	movw	r24, r16
 13a:	01 96       	adiw	r24, 0x01	; 1
 13c:	0e 94 6b 00 	call	0xd6	; 0xd6 <eeprom_read_8bit>
	 uint16_t data = high_data << 8;
 140:	2c 2f       	mov	r18, r28
 142:	30 e0       	ldi	r19, 0x00	; 0
 144:	32 2f       	mov	r19, r18
 146:	22 27       	eor	r18, r18
	 data |= low_data;
	 return data;
 }
 148:	a9 01       	movw	r20, r18
 14a:	48 2b       	or	r20, r24
 14c:	ca 01       	movw	r24, r20
 14e:	cf 91       	pop	r28
 150:	1f 91       	pop	r17
 152:	0f 91       	pop	r16
 154:	08 95       	ret

00000156 <eeprom_write_32bit>:
 
 void eeprom_write_32bit(uint16_t address, uint32_t data)
 {
 156:	cf 92       	push	r12
 158:	df 92       	push	r13
 15a:	ef 92       	push	r14
 15c:	ff 92       	push	r15
 15e:	cf 93       	push	r28
 160:	df 93       	push	r29
 162:	ec 01       	movw	r28, r24
 164:	6a 01       	movw	r12, r20
 166:	7b 01       	movw	r14, r22
	 uint8_t high_data_1 = data >> 24;
	 uint8_t high_data_2 = ((data >> 16) & 0x000000FF);
	 uint8_t low_data_2 = ((data >> 8) & 0x000000FF);
	 uint8_t low_data_1 = (data & 0x000000FF);
	 
	 eeprom_write_8bit(address,high_data_1);
 168:	6f 2d       	mov	r22, r15
 16a:	77 27       	eor	r23, r23
 16c:	88 27       	eor	r24, r24
 16e:	99 27       	eor	r25, r25
 170:	ce 01       	movw	r24, r28
 172:	0e 94 53 00 	call	0xa6	; 0xa6 <eeprom_write_8bit>
	 address++;
	 eeprom_write_8bit(address,high_data_2);
 176:	b7 01       	movw	r22, r14
 178:	88 27       	eor	r24, r24
 17a:	99 27       	eor	r25, r25
 17c:	ce 01       	movw	r24, r28
 17e:	01 96       	adiw	r24, 0x01	; 1
 180:	0e 94 53 00 	call	0xa6	; 0xa6 <eeprom_write_8bit>
	 address++;
	 eeprom_write_8bit(address,low_data_2);
 184:	99 27       	eor	r25, r25
 186:	8f 2d       	mov	r24, r15
 188:	7e 2d       	mov	r23, r14
 18a:	6d 2d       	mov	r22, r13
 18c:	ce 01       	movw	r24, r28
 18e:	02 96       	adiw	r24, 0x02	; 2
 190:	0e 94 53 00 	call	0xa6	; 0xa6 <eeprom_write_8bit>
	 address++;
	 eeprom_write_8bit(address,low_data_1);
 194:	6c 2d       	mov	r22, r12
 196:	ce 01       	movw	r24, r28
 198:	03 96       	adiw	r24, 0x03	; 3
 19a:	0e 94 53 00 	call	0xa6	; 0xa6 <eeprom_write_8bit>
	 
 }
 19e:	df 91       	pop	r29
 1a0:	cf 91       	pop	r28
 1a2:	ff 90       	pop	r15
 1a4:	ef 90       	pop	r14
 1a6:	df 90       	pop	r13
 1a8:	cf 90       	pop	r12
 1aa:	08 95       	ret

000001ac <eeprom_read_32bit>:
 
 uint32_t eeprom_read_32bit(uint16_t address)
 {
 1ac:	ff 92       	push	r15
 1ae:	0f 93       	push	r16
 1b0:	1f 93       	push	r17
 1b2:	cf 93       	push	r28
 1b4:	df 93       	push	r29
 1b6:	8c 01       	movw	r16, r24
	 uint32_t high_data_1 = eeprom_read_8bit(address);
 1b8:	0e 94 6b 00 	call	0xd6	; 0xd6 <eeprom_read_8bit>
 1bc:	f8 2e       	mov	r15, r24
	 address++;
	 uint32_t high_data_2 = eeprom_read_8bit(address);
 1be:	c8 01       	movw	r24, r16
 1c0:	01 96       	adiw	r24, 0x01	; 1
 1c2:	0e 94 6b 00 	call	0xd6	; 0xd6 <eeprom_read_8bit>
 1c6:	c8 2f       	mov	r28, r24
	 address++;
	 uint32_t low_data_2 = eeprom_read_8bit(address);
 1c8:	c8 01       	movw	r24, r16
 1ca:	02 96       	adiw	r24, 0x02	; 2
 1cc:	0e 94 6b 00 	call	0xd6	; 0xd6 <eeprom_read_8bit>
 1d0:	d8 2f       	mov	r29, r24
	 address++;
	 uint32_t low_data_1 = eeprom_read_8bit(address);
 1d2:	c8 01       	movw	r24, r16
 1d4:	03 96       	adiw	r24, 0x03	; 3
 1d6:	0e 94 6b 00 	call	0xd6	; 0xd6 <eeprom_read_8bit>
 1da:	4c 2f       	mov	r20, r28
 1dc:	50 e0       	ldi	r21, 0x00	; 0
 1de:	60 e0       	ldi	r22, 0x00	; 0
 1e0:	70 e0       	ldi	r23, 0x00	; 0
 1e2:	ba 01       	movw	r22, r20
 1e4:	55 27       	eor	r21, r21
 1e6:	44 27       	eor	r20, r20
 1e8:	7f 29       	or	r23, r15
 1ea:	48 2b       	or	r20, r24
	 uint32_t data = 0;
	 data |= (high_data_1 << 24);
	 data |= (high_data_2 << 16);
	 data |= (low_data_2 << 8);
	 data |= (low_data_1);
	 return data;
 1ec:	cb 01       	movw	r24, r22
 1ee:	ba 01       	movw	r22, r20
 1f0:	7d 2b       	or	r23, r29
 1f2:	df 91       	pop	r29
 1f4:	cf 91       	pop	r28
 1f6:	1f 91       	pop	r17
 1f8:	0f 91       	pop	r16
 1fa:	ff 90       	pop	r15
 1fc:	08 95       	ret

000001fe <main>:
#include "i2c24c32.h"
#include <util/delay.h>
#include <stdio.h>

int main(void)
{
 1fe:	cf 93       	push	r28
 200:	df 93       	push	r29
 202:	cd b7       	in	r28, 0x3d	; 61
 204:	de b7       	in	r29, 0x3e	; 62
 206:	6e 97       	sbiw	r28, 0x1e	; 30
 208:	0f b6       	in	r0, 0x3f	; 63
 20a:	f8 94       	cli
 20c:	de bf       	out	0x3e, r29	; 62
 20e:	0f be       	out	0x3f, r0	; 63
 210:	cd bf       	out	0x3d, r28	; 61
     sei();
 212:	78 94       	sei
     uart_init(UART_BAUD_SELECT(9600,F_CPU));
 214:	87 e6       	ldi	r24, 0x67	; 103
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	0e 94 2b 02 	call	0x456	; 0x456 <uart_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 21c:	2f ef       	ldi	r18, 0xFF	; 255
 21e:	81 ee       	ldi	r24, 0xE1	; 225
 220:	94 e0       	ldi	r25, 0x04	; 4
 222:	21 50       	subi	r18, 0x01	; 1
 224:	80 40       	sbci	r24, 0x00	; 0
 226:	90 40       	sbci	r25, 0x00	; 0
 228:	e1 f7       	brne	.-8      	; 0x222 <main+0x24>
 22a:	00 c0       	rjmp	.+0      	; 0x22c <main+0x2e>
 22c:	00 00       	nop
     _delay_ms(100);
     i2c_init();
 22e:	0e 94 55 01 	call	0x2aa	; 0x2aa <i2c_init>
	 eeprom_write_16bit(0, 65535);
 232:	6f ef       	ldi	r22, 0xFF	; 255
 234:	7f ef       	ldi	r23, 0xFF	; 255
 236:	80 e0       	ldi	r24, 0x00	; 0
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	0e 94 84 00 	call	0x108	; 0x108 <eeprom_write_16bit>
	 uint16_t okunan_deger = eeprom_read_16bit(0);
 23e:	80 e0       	ldi	r24, 0x00	; 0
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	0e 94 95 00 	call	0x12a	; 0x12a <eeprom_read_16bit>
	 char buf[15];
	 sprintf(buf,"16-BIT DEGER:%u \n",okunan_deger);
 246:	9f 93       	push	r25
 248:	8f 93       	push	r24
 24a:	80 e0       	ldi	r24, 0x00	; 0
 24c:	91 e0       	ldi	r25, 0x01	; 1
 24e:	9f 93       	push	r25
 250:	8f 93       	push	r24
 252:	8e 01       	movw	r16, r28
 254:	0f 5f       	subi	r16, 0xFF	; 255
 256:	1f 4f       	sbci	r17, 0xFF	; 255
 258:	1f 93       	push	r17
 25a:	0f 93       	push	r16
 25c:	0e 94 68 02 	call	0x4d0	; 0x4d0 <sprintf>
	 uart_puts(buf);
 260:	c8 01       	movw	r24, r16
 262:	0e 94 59 02 	call	0x4b2	; 0x4b2 <uart_puts>
	 eeprom_write_32bit(0, 4294967295);
 266:	4f ef       	ldi	r20, 0xFF	; 255
 268:	5f ef       	ldi	r21, 0xFF	; 255
 26a:	ba 01       	movw	r22, r20
 26c:	80 e0       	ldi	r24, 0x00	; 0
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	0e 94 ab 00 	call	0x156	; 0x156 <eeprom_write_32bit>
	 uint32_t okunan_deger2 = eeprom_read_32bit(0);
 274:	80 e0       	ldi	r24, 0x00	; 0
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	0e 94 d6 00 	call	0x1ac	; 0x1ac <eeprom_read_32bit>
	 char buf2[15];
	 sprintf(buf2,"32-BIT DEGER:%lu \n",okunan_deger2);
 27c:	9f 93       	push	r25
 27e:	8f 93       	push	r24
 280:	7f 93       	push	r23
 282:	6f 93       	push	r22
 284:	82 e1       	ldi	r24, 0x12	; 18
 286:	91 e0       	ldi	r25, 0x01	; 1
 288:	9f 93       	push	r25
 28a:	8f 93       	push	r24
 28c:	01 5f       	subi	r16, 0xF1	; 241
 28e:	1f 4f       	sbci	r17, 0xFF	; 255
 290:	1f 93       	push	r17
 292:	0f 93       	push	r16
 294:	0e 94 68 02 	call	0x4d0	; 0x4d0 <sprintf>
	 uart_puts(buf2);
 298:	c8 01       	movw	r24, r16
 29a:	0e 94 59 02 	call	0x4b2	; 0x4b2 <uart_puts>
 29e:	0f b6       	in	r0, 0x3f	; 63
 2a0:	f8 94       	cli
 2a2:	de bf       	out	0x3e, r29	; 62
 2a4:	0f be       	out	0x3f, r0	; 63
 2a6:	cd bf       	out	0x3d, r28	; 61
 2a8:	ff cf       	rjmp	.-2      	; 0x2a8 <main+0xaa>

000002aa <i2c_init>:
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	while(!(TWCR & (1<<TWINT)));    

    return TWDR;

}/* i2c_readAck */
 2aa:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
 2ae:	88 e4       	ldi	r24, 0x48	; 72
 2b0:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
 2b4:	08 95       	ret

000002b6 <i2c_start>:
 2b6:	94 ea       	ldi	r25, 0xA4	; 164
 2b8:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 2bc:	ec eb       	ldi	r30, 0xBC	; 188
 2be:	f0 e0       	ldi	r31, 0x00	; 0
 2c0:	90 81       	ld	r25, Z
 2c2:	99 23       	and	r25, r25
 2c4:	ec f7       	brge	.-6      	; 0x2c0 <i2c_start+0xa>
 2c6:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
 2ca:	98 7f       	andi	r25, 0xF8	; 248
 2cc:	98 30       	cpi	r25, 0x08	; 8
 2ce:	11 f0       	breq	.+4      	; 0x2d4 <i2c_start+0x1e>
 2d0:	90 31       	cpi	r25, 0x10	; 16
 2d2:	a1 f4       	brne	.+40     	; 0x2fc <i2c_start+0x46>
 2d4:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
 2d8:	84 e8       	ldi	r24, 0x84	; 132
 2da:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 2de:	ec eb       	ldi	r30, 0xBC	; 188
 2e0:	f0 e0       	ldi	r31, 0x00	; 0
 2e2:	80 81       	ld	r24, Z
 2e4:	88 23       	and	r24, r24
 2e6:	ec f7       	brge	.-6      	; 0x2e2 <i2c_start+0x2c>
 2e8:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
 2ec:	98 7f       	andi	r25, 0xF8	; 248
 2ee:	98 31       	cpi	r25, 0x18	; 24
 2f0:	39 f0       	breq	.+14     	; 0x300 <i2c_start+0x4a>
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	90 34       	cpi	r25, 0x40	; 64
 2f6:	29 f4       	brne	.+10     	; 0x302 <i2c_start+0x4c>
 2f8:	80 e0       	ldi	r24, 0x00	; 0
 2fa:	08 95       	ret
 2fc:	81 e0       	ldi	r24, 0x01	; 1
 2fe:	08 95       	ret
 300:	80 e0       	ldi	r24, 0x00	; 0
 302:	08 95       	ret

00000304 <i2c_start_wait>:
 304:	cf 93       	push	r28
 306:	df 93       	push	r29
 308:	ec eb       	ldi	r30, 0xBC	; 188
 30a:	f0 e0       	ldi	r31, 0x00	; 0
 30c:	24 ea       	ldi	r18, 0xA4	; 164
 30e:	a9 eb       	ldi	r26, 0xB9	; 185
 310:	b0 e0       	ldi	r27, 0x00	; 0
 312:	cb eb       	ldi	r28, 0xBB	; 187
 314:	d0 e0       	ldi	r29, 0x00	; 0
 316:	34 e8       	ldi	r19, 0x84	; 132
 318:	44 e9       	ldi	r20, 0x94	; 148
 31a:	20 83       	st	Z, r18
 31c:	90 81       	ld	r25, Z
 31e:	99 23       	and	r25, r25
 320:	ec f7       	brge	.-6      	; 0x31c <i2c_start_wait+0x18>
 322:	9c 91       	ld	r25, X
 324:	98 7f       	andi	r25, 0xF8	; 248
 326:	98 30       	cpi	r25, 0x08	; 8
 328:	11 f0       	breq	.+4      	; 0x32e <i2c_start_wait+0x2a>
 32a:	90 31       	cpi	r25, 0x10	; 16
 32c:	b1 f7       	brne	.-20     	; 0x31a <i2c_start_wait+0x16>
 32e:	88 83       	st	Y, r24
 330:	30 83       	st	Z, r19
 332:	90 81       	ld	r25, Z
 334:	99 23       	and	r25, r25
 336:	ec f7       	brge	.-6      	; 0x332 <i2c_start_wait+0x2e>
 338:	9c 91       	ld	r25, X
 33a:	98 7f       	andi	r25, 0xF8	; 248
 33c:	90 32       	cpi	r25, 0x20	; 32
 33e:	11 f0       	breq	.+4      	; 0x344 <i2c_start_wait+0x40>
 340:	98 35       	cpi	r25, 0x58	; 88
 342:	29 f4       	brne	.+10     	; 0x34e <i2c_start_wait+0x4a>
 344:	40 83       	st	Z, r20
 346:	90 81       	ld	r25, Z
 348:	94 fd       	sbrc	r25, 4
 34a:	fd cf       	rjmp	.-6      	; 0x346 <i2c_start_wait+0x42>
 34c:	e6 cf       	rjmp	.-52     	; 0x31a <i2c_start_wait+0x16>
 34e:	df 91       	pop	r29
 350:	cf 91       	pop	r28
 352:	08 95       	ret

00000354 <i2c_rep_start>:
 354:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
 358:	08 95       	ret

0000035a <i2c_stop>:
 35a:	84 e9       	ldi	r24, 0x94	; 148
 35c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 360:	ec eb       	ldi	r30, 0xBC	; 188
 362:	f0 e0       	ldi	r31, 0x00	; 0
 364:	80 81       	ld	r24, Z
 366:	84 fd       	sbrc	r24, 4
 368:	fd cf       	rjmp	.-6      	; 0x364 <i2c_stop+0xa>
 36a:	08 95       	ret

0000036c <i2c_write>:
 36c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
 370:	84 e8       	ldi	r24, 0x84	; 132
 372:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 376:	ec eb       	ldi	r30, 0xBC	; 188
 378:	f0 e0       	ldi	r31, 0x00	; 0
 37a:	80 81       	ld	r24, Z
 37c:	88 23       	and	r24, r24
 37e:	ec f7       	brge	.-6      	; 0x37a <i2c_write+0xe>
 380:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
 384:	98 7f       	andi	r25, 0xF8	; 248
 386:	81 e0       	ldi	r24, 0x01	; 1
 388:	98 32       	cpi	r25, 0x28	; 40
 38a:	09 f4       	brne	.+2      	; 0x38e <i2c_write+0x22>
 38c:	80 e0       	ldi	r24, 0x00	; 0
 38e:	08 95       	ret

00000390 <i2c_readNak>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
 390:	84 e8       	ldi	r24, 0x84	; 132
 392:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while(!(TWCR & (1<<TWINT)));
 396:	ec eb       	ldi	r30, 0xBC	; 188
 398:	f0 e0       	ldi	r31, 0x00	; 0
 39a:	80 81       	ld	r24, Z
 39c:	88 23       	and	r24, r24
 39e:	ec f7       	brge	.-6      	; 0x39a <i2c_readNak+0xa>
	
    return TWDR;
 3a0:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>

}/* i2c_readNak */
 3a4:	08 95       	ret

000003a6 <__vector_18>:
    UART_RxTail = tmptail; 
    
    UART_LastRxError = 0;
    return (lastRxError << 8) + data;

}/* uart_getc */
 3a6:	1f 92       	push	r1
 3a8:	0f 92       	push	r0
 3aa:	0f b6       	in	r0, 0x3f	; 63
 3ac:	0f 92       	push	r0
 3ae:	11 24       	eor	r1, r1
 3b0:	2f 93       	push	r18
 3b2:	8f 93       	push	r24
 3b4:	9f 93       	push	r25
 3b6:	ef 93       	push	r30
 3b8:	ff 93       	push	r31
 3ba:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
 3be:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 3c2:	8c 71       	andi	r24, 0x1C	; 28
 3c4:	e0 91 28 01 	lds	r30, 0x0128	; 0x800128 <UART_RxHead>
 3c8:	ef 5f       	subi	r30, 0xFF	; 255
 3ca:	ef 71       	andi	r30, 0x1F	; 31
 3cc:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <UART_RxTail>
 3d0:	e9 17       	cp	r30, r25
 3d2:	39 f0       	breq	.+14     	; 0x3e2 <__vector_18+0x3c>
 3d4:	e0 93 28 01 	sts	0x0128, r30	; 0x800128 <UART_RxHead>
 3d8:	f0 e0       	ldi	r31, 0x00	; 0
 3da:	e5 5d       	subi	r30, 0xD5	; 213
 3dc:	fe 4f       	sbci	r31, 0xFE	; 254
 3de:	20 83       	st	Z, r18
 3e0:	01 c0       	rjmp	.+2      	; 0x3e4 <__vector_18+0x3e>
 3e2:	82 e0       	ldi	r24, 0x02	; 2
 3e4:	90 91 26 01 	lds	r25, 0x0126	; 0x800126 <__data_end>
 3e8:	89 2b       	or	r24, r25
 3ea:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <__data_end>
 3ee:	ff 91       	pop	r31
 3f0:	ef 91       	pop	r30
 3f2:	9f 91       	pop	r25
 3f4:	8f 91       	pop	r24
 3f6:	2f 91       	pop	r18
 3f8:	0f 90       	pop	r0
 3fa:	0f be       	out	0x3f, r0	; 63
 3fc:	0f 90       	pop	r0
 3fe:	1f 90       	pop	r1
 400:	18 95       	reti

00000402 <__vector_19>:
 402:	1f 92       	push	r1
 404:	0f 92       	push	r0
 406:	0f b6       	in	r0, 0x3f	; 63
 408:	0f 92       	push	r0
 40a:	11 24       	eor	r1, r1
 40c:	8f 93       	push	r24
 40e:	9f 93       	push	r25
 410:	ef 93       	push	r30
 412:	ff 93       	push	r31
 414:	90 91 2a 01 	lds	r25, 0x012A	; 0x80012a <UART_TxHead>
 418:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <UART_TxTail>
 41c:	98 17       	cp	r25, r24
 41e:	69 f0       	breq	.+26     	; 0x43a <__vector_19+0x38>
 420:	e0 91 29 01 	lds	r30, 0x0129	; 0x800129 <UART_TxTail>
 424:	ef 5f       	subi	r30, 0xFF	; 255
 426:	ef 71       	andi	r30, 0x1F	; 31
 428:	e0 93 29 01 	sts	0x0129, r30	; 0x800129 <UART_TxTail>
 42c:	f0 e0       	ldi	r31, 0x00	; 0
 42e:	e5 5b       	subi	r30, 0xB5	; 181
 430:	fe 4f       	sbci	r31, 0xFE	; 254
 432:	80 81       	ld	r24, Z
 434:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 438:	05 c0       	rjmp	.+10     	; 0x444 <__vector_19+0x42>
 43a:	e1 ec       	ldi	r30, 0xC1	; 193
 43c:	f0 e0       	ldi	r31, 0x00	; 0
 43e:	80 81       	ld	r24, Z
 440:	8f 7d       	andi	r24, 0xDF	; 223
 442:	80 83       	st	Z, r24
 444:	ff 91       	pop	r31
 446:	ef 91       	pop	r30
 448:	9f 91       	pop	r25
 44a:	8f 91       	pop	r24
 44c:	0f 90       	pop	r0
 44e:	0f be       	out	0x3f, r0	; 63
 450:	0f 90       	pop	r0
 452:	1f 90       	pop	r1
 454:	18 95       	reti

00000456 <uart_init>:
 456:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <UART_TxHead>
 45a:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <UART_TxTail>
 45e:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <UART_RxHead>
 462:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <UART_RxTail>
 466:	99 23       	and	r25, r25
 468:	1c f4       	brge	.+6      	; 0x470 <uart_init+0x1a>
 46a:	22 e0       	ldi	r18, 0x02	; 2
 46c:	20 93 c0 00 	sts	0x00C0, r18	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
 470:	90 78       	andi	r25, 0x80	; 128
 472:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
 476:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
 47a:	88 e9       	ldi	r24, 0x98	; 152
 47c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
 480:	86 e0       	ldi	r24, 0x06	; 6
 482:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
 486:	08 95       	ret

00000488 <uart_putc>:
void uart_putc(unsigned char data)
{
    unsigned char tmphead;

    
    tmphead  = (UART_TxHead + 1) & UART_TX_BUFFER_MASK;
 488:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <UART_TxHead>
 48c:	2f 5f       	subi	r18, 0xFF	; 255
 48e:	2f 71       	andi	r18, 0x1F	; 31
    
    while ( tmphead == UART_TxTail ){
 490:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <UART_TxTail>
 494:	29 17       	cp	r18, r25
 496:	e1 f3       	breq	.-8      	; 0x490 <uart_putc+0x8>
        ;/* wait for free space in buffer */
    }
    
    UART_TxBuf[tmphead] = data;
 498:	e2 2f       	mov	r30, r18
 49a:	f0 e0       	ldi	r31, 0x00	; 0
 49c:	e5 5b       	subi	r30, 0xB5	; 181
 49e:	fe 4f       	sbci	r31, 0xFE	; 254
 4a0:	80 83       	st	Z, r24
    UART_TxHead = tmphead;
 4a2:	20 93 2a 01 	sts	0x012A, r18	; 0x80012a <UART_TxHead>

    /* enable UDRE interrupt */
    UART0_CONTROL    |= _BV(UART0_UDRIE);
 4a6:	e1 ec       	ldi	r30, 0xC1	; 193
 4a8:	f0 e0       	ldi	r31, 0x00	; 0
 4aa:	80 81       	ld	r24, Z
 4ac:	80 62       	ori	r24, 0x20	; 32
 4ae:	80 83       	st	Z, r24
 4b0:	08 95       	ret

000004b2 <uart_puts>:
Purpose:  transmit string to UART
Input:    string to be transmitted
Returns:  none          
**************************************************************************/
void uart_puts(const char *s )
{
 4b2:	cf 93       	push	r28
 4b4:	df 93       	push	r29
 4b6:	ec 01       	movw	r28, r24
    while (*s) 
 4b8:	88 81       	ld	r24, Y
 4ba:	88 23       	and	r24, r24
 4bc:	31 f0       	breq	.+12     	; 0x4ca <uart_puts+0x18>
 4be:	21 96       	adiw	r28, 0x01	; 1
      uart_putc(*s++);
 4c0:	0e 94 44 02 	call	0x488	; 0x488 <uart_putc>
Input:    string to be transmitted
Returns:  none          
**************************************************************************/
void uart_puts(const char *s )
{
    while (*s) 
 4c4:	89 91       	ld	r24, Y+
 4c6:	81 11       	cpse	r24, r1
 4c8:	fb cf       	rjmp	.-10     	; 0x4c0 <uart_puts+0xe>
      uart_putc(*s++);

}/* uart_puts */
 4ca:	df 91       	pop	r29
 4cc:	cf 91       	pop	r28
 4ce:	08 95       	ret

000004d0 <sprintf>:
 4d0:	ae e0       	ldi	r26, 0x0E	; 14
 4d2:	b0 e0       	ldi	r27, 0x00	; 0
 4d4:	ee e6       	ldi	r30, 0x6E	; 110
 4d6:	f2 e0       	ldi	r31, 0x02	; 2
 4d8:	0c 94 29 05 	jmp	0xa52	; 0xa52 <__prologue_saves__+0x1c>
 4dc:	0d 89       	ldd	r16, Y+21	; 0x15
 4de:	1e 89       	ldd	r17, Y+22	; 0x16
 4e0:	86 e0       	ldi	r24, 0x06	; 6
 4e2:	8c 83       	std	Y+4, r24	; 0x04
 4e4:	1a 83       	std	Y+2, r17	; 0x02
 4e6:	09 83       	std	Y+1, r16	; 0x01
 4e8:	8f ef       	ldi	r24, 0xFF	; 255
 4ea:	9f e7       	ldi	r25, 0x7F	; 127
 4ec:	9e 83       	std	Y+6, r25	; 0x06
 4ee:	8d 83       	std	Y+5, r24	; 0x05
 4f0:	ae 01       	movw	r20, r28
 4f2:	47 5e       	subi	r20, 0xE7	; 231
 4f4:	5f 4f       	sbci	r21, 0xFF	; 255
 4f6:	6f 89       	ldd	r22, Y+23	; 0x17
 4f8:	78 8d       	ldd	r23, Y+24	; 0x18
 4fa:	ce 01       	movw	r24, r28
 4fc:	01 96       	adiw	r24, 0x01	; 1
 4fe:	0e 94 8a 02 	call	0x514	; 0x514 <vfprintf>
 502:	ef 81       	ldd	r30, Y+7	; 0x07
 504:	f8 85       	ldd	r31, Y+8	; 0x08
 506:	e0 0f       	add	r30, r16
 508:	f1 1f       	adc	r31, r17
 50a:	10 82       	st	Z, r1
 50c:	2e 96       	adiw	r28, 0x0e	; 14
 50e:	e4 e0       	ldi	r30, 0x04	; 4
 510:	0c 94 45 05 	jmp	0xa8a	; 0xa8a <__epilogue_restores__+0x1c>

00000514 <vfprintf>:
 514:	ab e0       	ldi	r26, 0x0B	; 11
 516:	b0 e0       	ldi	r27, 0x00	; 0
 518:	e0 e9       	ldi	r30, 0x90	; 144
 51a:	f2 e0       	ldi	r31, 0x02	; 2
 51c:	0c 94 1b 05 	jmp	0xa36	; 0xa36 <__prologue_saves__>
 520:	6c 01       	movw	r12, r24
 522:	7b 01       	movw	r14, r22
 524:	8a 01       	movw	r16, r20
 526:	fc 01       	movw	r30, r24
 528:	17 82       	std	Z+7, r1	; 0x07
 52a:	16 82       	std	Z+6, r1	; 0x06
 52c:	83 81       	ldd	r24, Z+3	; 0x03
 52e:	81 ff       	sbrs	r24, 1
 530:	cc c1       	rjmp	.+920    	; 0x8ca <vfprintf+0x3b6>
 532:	ce 01       	movw	r24, r28
 534:	01 96       	adiw	r24, 0x01	; 1
 536:	3c 01       	movw	r6, r24
 538:	f6 01       	movw	r30, r12
 53a:	93 81       	ldd	r25, Z+3	; 0x03
 53c:	f7 01       	movw	r30, r14
 53e:	93 fd       	sbrc	r25, 3
 540:	85 91       	lpm	r24, Z+
 542:	93 ff       	sbrs	r25, 3
 544:	81 91       	ld	r24, Z+
 546:	7f 01       	movw	r14, r30
 548:	88 23       	and	r24, r24
 54a:	09 f4       	brne	.+2      	; 0x54e <vfprintf+0x3a>
 54c:	ba c1       	rjmp	.+884    	; 0x8c2 <vfprintf+0x3ae>
 54e:	85 32       	cpi	r24, 0x25	; 37
 550:	39 f4       	brne	.+14     	; 0x560 <vfprintf+0x4c>
 552:	93 fd       	sbrc	r25, 3
 554:	85 91       	lpm	r24, Z+
 556:	93 ff       	sbrs	r25, 3
 558:	81 91       	ld	r24, Z+
 55a:	7f 01       	movw	r14, r30
 55c:	85 32       	cpi	r24, 0x25	; 37
 55e:	29 f4       	brne	.+10     	; 0x56a <vfprintf+0x56>
 560:	b6 01       	movw	r22, r12
 562:	90 e0       	ldi	r25, 0x00	; 0
 564:	0e 94 81 04 	call	0x902	; 0x902 <fputc>
 568:	e7 cf       	rjmp	.-50     	; 0x538 <vfprintf+0x24>
 56a:	91 2c       	mov	r9, r1
 56c:	21 2c       	mov	r2, r1
 56e:	31 2c       	mov	r3, r1
 570:	ff e1       	ldi	r31, 0x1F	; 31
 572:	f3 15       	cp	r31, r3
 574:	d8 f0       	brcs	.+54     	; 0x5ac <vfprintf+0x98>
 576:	8b 32       	cpi	r24, 0x2B	; 43
 578:	79 f0       	breq	.+30     	; 0x598 <vfprintf+0x84>
 57a:	38 f4       	brcc	.+14     	; 0x58a <vfprintf+0x76>
 57c:	80 32       	cpi	r24, 0x20	; 32
 57e:	79 f0       	breq	.+30     	; 0x59e <vfprintf+0x8a>
 580:	83 32       	cpi	r24, 0x23	; 35
 582:	a1 f4       	brne	.+40     	; 0x5ac <vfprintf+0x98>
 584:	23 2d       	mov	r18, r3
 586:	20 61       	ori	r18, 0x10	; 16
 588:	1d c0       	rjmp	.+58     	; 0x5c4 <vfprintf+0xb0>
 58a:	8d 32       	cpi	r24, 0x2D	; 45
 58c:	61 f0       	breq	.+24     	; 0x5a6 <vfprintf+0x92>
 58e:	80 33       	cpi	r24, 0x30	; 48
 590:	69 f4       	brne	.+26     	; 0x5ac <vfprintf+0x98>
 592:	23 2d       	mov	r18, r3
 594:	21 60       	ori	r18, 0x01	; 1
 596:	16 c0       	rjmp	.+44     	; 0x5c4 <vfprintf+0xb0>
 598:	83 2d       	mov	r24, r3
 59a:	82 60       	ori	r24, 0x02	; 2
 59c:	38 2e       	mov	r3, r24
 59e:	e3 2d       	mov	r30, r3
 5a0:	e4 60       	ori	r30, 0x04	; 4
 5a2:	3e 2e       	mov	r3, r30
 5a4:	2a c0       	rjmp	.+84     	; 0x5fa <vfprintf+0xe6>
 5a6:	f3 2d       	mov	r31, r3
 5a8:	f8 60       	ori	r31, 0x08	; 8
 5aa:	1d c0       	rjmp	.+58     	; 0x5e6 <vfprintf+0xd2>
 5ac:	37 fc       	sbrc	r3, 7
 5ae:	2d c0       	rjmp	.+90     	; 0x60a <vfprintf+0xf6>
 5b0:	20 ed       	ldi	r18, 0xD0	; 208
 5b2:	28 0f       	add	r18, r24
 5b4:	2a 30       	cpi	r18, 0x0A	; 10
 5b6:	40 f0       	brcs	.+16     	; 0x5c8 <vfprintf+0xb4>
 5b8:	8e 32       	cpi	r24, 0x2E	; 46
 5ba:	b9 f4       	brne	.+46     	; 0x5ea <vfprintf+0xd6>
 5bc:	36 fc       	sbrc	r3, 6
 5be:	81 c1       	rjmp	.+770    	; 0x8c2 <vfprintf+0x3ae>
 5c0:	23 2d       	mov	r18, r3
 5c2:	20 64       	ori	r18, 0x40	; 64
 5c4:	32 2e       	mov	r3, r18
 5c6:	19 c0       	rjmp	.+50     	; 0x5fa <vfprintf+0xe6>
 5c8:	36 fe       	sbrs	r3, 6
 5ca:	06 c0       	rjmp	.+12     	; 0x5d8 <vfprintf+0xc4>
 5cc:	8a e0       	ldi	r24, 0x0A	; 10
 5ce:	98 9e       	mul	r9, r24
 5d0:	20 0d       	add	r18, r0
 5d2:	11 24       	eor	r1, r1
 5d4:	92 2e       	mov	r9, r18
 5d6:	11 c0       	rjmp	.+34     	; 0x5fa <vfprintf+0xe6>
 5d8:	ea e0       	ldi	r30, 0x0A	; 10
 5da:	2e 9e       	mul	r2, r30
 5dc:	20 0d       	add	r18, r0
 5de:	11 24       	eor	r1, r1
 5e0:	22 2e       	mov	r2, r18
 5e2:	f3 2d       	mov	r31, r3
 5e4:	f0 62       	ori	r31, 0x20	; 32
 5e6:	3f 2e       	mov	r3, r31
 5e8:	08 c0       	rjmp	.+16     	; 0x5fa <vfprintf+0xe6>
 5ea:	8c 36       	cpi	r24, 0x6C	; 108
 5ec:	21 f4       	brne	.+8      	; 0x5f6 <vfprintf+0xe2>
 5ee:	83 2d       	mov	r24, r3
 5f0:	80 68       	ori	r24, 0x80	; 128
 5f2:	38 2e       	mov	r3, r24
 5f4:	02 c0       	rjmp	.+4      	; 0x5fa <vfprintf+0xe6>
 5f6:	88 36       	cpi	r24, 0x68	; 104
 5f8:	41 f4       	brne	.+16     	; 0x60a <vfprintf+0xf6>
 5fa:	f7 01       	movw	r30, r14
 5fc:	93 fd       	sbrc	r25, 3
 5fe:	85 91       	lpm	r24, Z+
 600:	93 ff       	sbrs	r25, 3
 602:	81 91       	ld	r24, Z+
 604:	7f 01       	movw	r14, r30
 606:	81 11       	cpse	r24, r1
 608:	b3 cf       	rjmp	.-154    	; 0x570 <vfprintf+0x5c>
 60a:	98 2f       	mov	r25, r24
 60c:	9f 7d       	andi	r25, 0xDF	; 223
 60e:	95 54       	subi	r25, 0x45	; 69
 610:	93 30       	cpi	r25, 0x03	; 3
 612:	28 f4       	brcc	.+10     	; 0x61e <vfprintf+0x10a>
 614:	0c 5f       	subi	r16, 0xFC	; 252
 616:	1f 4f       	sbci	r17, 0xFF	; 255
 618:	9f e3       	ldi	r25, 0x3F	; 63
 61a:	99 83       	std	Y+1, r25	; 0x01
 61c:	0d c0       	rjmp	.+26     	; 0x638 <vfprintf+0x124>
 61e:	83 36       	cpi	r24, 0x63	; 99
 620:	31 f0       	breq	.+12     	; 0x62e <vfprintf+0x11a>
 622:	83 37       	cpi	r24, 0x73	; 115
 624:	71 f0       	breq	.+28     	; 0x642 <vfprintf+0x12e>
 626:	83 35       	cpi	r24, 0x53	; 83
 628:	09 f0       	breq	.+2      	; 0x62c <vfprintf+0x118>
 62a:	59 c0       	rjmp	.+178    	; 0x6de <vfprintf+0x1ca>
 62c:	21 c0       	rjmp	.+66     	; 0x670 <vfprintf+0x15c>
 62e:	f8 01       	movw	r30, r16
 630:	80 81       	ld	r24, Z
 632:	89 83       	std	Y+1, r24	; 0x01
 634:	0e 5f       	subi	r16, 0xFE	; 254
 636:	1f 4f       	sbci	r17, 0xFF	; 255
 638:	88 24       	eor	r8, r8
 63a:	83 94       	inc	r8
 63c:	91 2c       	mov	r9, r1
 63e:	53 01       	movw	r10, r6
 640:	13 c0       	rjmp	.+38     	; 0x668 <vfprintf+0x154>
 642:	28 01       	movw	r4, r16
 644:	f2 e0       	ldi	r31, 0x02	; 2
 646:	4f 0e       	add	r4, r31
 648:	51 1c       	adc	r5, r1
 64a:	f8 01       	movw	r30, r16
 64c:	a0 80       	ld	r10, Z
 64e:	b1 80       	ldd	r11, Z+1	; 0x01
 650:	36 fe       	sbrs	r3, 6
 652:	03 c0       	rjmp	.+6      	; 0x65a <vfprintf+0x146>
 654:	69 2d       	mov	r22, r9
 656:	70 e0       	ldi	r23, 0x00	; 0
 658:	02 c0       	rjmp	.+4      	; 0x65e <vfprintf+0x14a>
 65a:	6f ef       	ldi	r22, 0xFF	; 255
 65c:	7f ef       	ldi	r23, 0xFF	; 255
 65e:	c5 01       	movw	r24, r10
 660:	0e 94 76 04 	call	0x8ec	; 0x8ec <strnlen>
 664:	4c 01       	movw	r8, r24
 666:	82 01       	movw	r16, r4
 668:	f3 2d       	mov	r31, r3
 66a:	ff 77       	andi	r31, 0x7F	; 127
 66c:	3f 2e       	mov	r3, r31
 66e:	16 c0       	rjmp	.+44     	; 0x69c <vfprintf+0x188>
 670:	28 01       	movw	r4, r16
 672:	22 e0       	ldi	r18, 0x02	; 2
 674:	42 0e       	add	r4, r18
 676:	51 1c       	adc	r5, r1
 678:	f8 01       	movw	r30, r16
 67a:	a0 80       	ld	r10, Z
 67c:	b1 80       	ldd	r11, Z+1	; 0x01
 67e:	36 fe       	sbrs	r3, 6
 680:	03 c0       	rjmp	.+6      	; 0x688 <vfprintf+0x174>
 682:	69 2d       	mov	r22, r9
 684:	70 e0       	ldi	r23, 0x00	; 0
 686:	02 c0       	rjmp	.+4      	; 0x68c <vfprintf+0x178>
 688:	6f ef       	ldi	r22, 0xFF	; 255
 68a:	7f ef       	ldi	r23, 0xFF	; 255
 68c:	c5 01       	movw	r24, r10
 68e:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <strnlen_P>
 692:	4c 01       	movw	r8, r24
 694:	f3 2d       	mov	r31, r3
 696:	f0 68       	ori	r31, 0x80	; 128
 698:	3f 2e       	mov	r3, r31
 69a:	82 01       	movw	r16, r4
 69c:	33 fc       	sbrc	r3, 3
 69e:	1b c0       	rjmp	.+54     	; 0x6d6 <vfprintf+0x1c2>
 6a0:	82 2d       	mov	r24, r2
 6a2:	90 e0       	ldi	r25, 0x00	; 0
 6a4:	88 16       	cp	r8, r24
 6a6:	99 06       	cpc	r9, r25
 6a8:	b0 f4       	brcc	.+44     	; 0x6d6 <vfprintf+0x1c2>
 6aa:	b6 01       	movw	r22, r12
 6ac:	80 e2       	ldi	r24, 0x20	; 32
 6ae:	90 e0       	ldi	r25, 0x00	; 0
 6b0:	0e 94 81 04 	call	0x902	; 0x902 <fputc>
 6b4:	2a 94       	dec	r2
 6b6:	f4 cf       	rjmp	.-24     	; 0x6a0 <vfprintf+0x18c>
 6b8:	f5 01       	movw	r30, r10
 6ba:	37 fc       	sbrc	r3, 7
 6bc:	85 91       	lpm	r24, Z+
 6be:	37 fe       	sbrs	r3, 7
 6c0:	81 91       	ld	r24, Z+
 6c2:	5f 01       	movw	r10, r30
 6c4:	b6 01       	movw	r22, r12
 6c6:	90 e0       	ldi	r25, 0x00	; 0
 6c8:	0e 94 81 04 	call	0x902	; 0x902 <fputc>
 6cc:	21 10       	cpse	r2, r1
 6ce:	2a 94       	dec	r2
 6d0:	21 e0       	ldi	r18, 0x01	; 1
 6d2:	82 1a       	sub	r8, r18
 6d4:	91 08       	sbc	r9, r1
 6d6:	81 14       	cp	r8, r1
 6d8:	91 04       	cpc	r9, r1
 6da:	71 f7       	brne	.-36     	; 0x6b8 <vfprintf+0x1a4>
 6dc:	e8 c0       	rjmp	.+464    	; 0x8ae <vfprintf+0x39a>
 6de:	84 36       	cpi	r24, 0x64	; 100
 6e0:	11 f0       	breq	.+4      	; 0x6e6 <vfprintf+0x1d2>
 6e2:	89 36       	cpi	r24, 0x69	; 105
 6e4:	41 f5       	brne	.+80     	; 0x736 <vfprintf+0x222>
 6e6:	f8 01       	movw	r30, r16
 6e8:	37 fe       	sbrs	r3, 7
 6ea:	07 c0       	rjmp	.+14     	; 0x6fa <vfprintf+0x1e6>
 6ec:	60 81       	ld	r22, Z
 6ee:	71 81       	ldd	r23, Z+1	; 0x01
 6f0:	82 81       	ldd	r24, Z+2	; 0x02
 6f2:	93 81       	ldd	r25, Z+3	; 0x03
 6f4:	0c 5f       	subi	r16, 0xFC	; 252
 6f6:	1f 4f       	sbci	r17, 0xFF	; 255
 6f8:	08 c0       	rjmp	.+16     	; 0x70a <vfprintf+0x1f6>
 6fa:	60 81       	ld	r22, Z
 6fc:	71 81       	ldd	r23, Z+1	; 0x01
 6fe:	07 2e       	mov	r0, r23
 700:	00 0c       	add	r0, r0
 702:	88 0b       	sbc	r24, r24
 704:	99 0b       	sbc	r25, r25
 706:	0e 5f       	subi	r16, 0xFE	; 254
 708:	1f 4f       	sbci	r17, 0xFF	; 255
 70a:	f3 2d       	mov	r31, r3
 70c:	ff 76       	andi	r31, 0x6F	; 111
 70e:	3f 2e       	mov	r3, r31
 710:	97 ff       	sbrs	r25, 7
 712:	09 c0       	rjmp	.+18     	; 0x726 <vfprintf+0x212>
 714:	90 95       	com	r25
 716:	80 95       	com	r24
 718:	70 95       	com	r23
 71a:	61 95       	neg	r22
 71c:	7f 4f       	sbci	r23, 0xFF	; 255
 71e:	8f 4f       	sbci	r24, 0xFF	; 255
 720:	9f 4f       	sbci	r25, 0xFF	; 255
 722:	f0 68       	ori	r31, 0x80	; 128
 724:	3f 2e       	mov	r3, r31
 726:	2a e0       	ldi	r18, 0x0A	; 10
 728:	30 e0       	ldi	r19, 0x00	; 0
 72a:	a3 01       	movw	r20, r6
 72c:	0e 94 bd 04 	call	0x97a	; 0x97a <__ultoa_invert>
 730:	88 2e       	mov	r8, r24
 732:	86 18       	sub	r8, r6
 734:	45 c0       	rjmp	.+138    	; 0x7c0 <vfprintf+0x2ac>
 736:	85 37       	cpi	r24, 0x75	; 117
 738:	31 f4       	brne	.+12     	; 0x746 <vfprintf+0x232>
 73a:	23 2d       	mov	r18, r3
 73c:	2f 7e       	andi	r18, 0xEF	; 239
 73e:	b2 2e       	mov	r11, r18
 740:	2a e0       	ldi	r18, 0x0A	; 10
 742:	30 e0       	ldi	r19, 0x00	; 0
 744:	25 c0       	rjmp	.+74     	; 0x790 <vfprintf+0x27c>
 746:	93 2d       	mov	r25, r3
 748:	99 7f       	andi	r25, 0xF9	; 249
 74a:	b9 2e       	mov	r11, r25
 74c:	8f 36       	cpi	r24, 0x6F	; 111
 74e:	c1 f0       	breq	.+48     	; 0x780 <vfprintf+0x26c>
 750:	18 f4       	brcc	.+6      	; 0x758 <vfprintf+0x244>
 752:	88 35       	cpi	r24, 0x58	; 88
 754:	79 f0       	breq	.+30     	; 0x774 <vfprintf+0x260>
 756:	b5 c0       	rjmp	.+362    	; 0x8c2 <vfprintf+0x3ae>
 758:	80 37       	cpi	r24, 0x70	; 112
 75a:	19 f0       	breq	.+6      	; 0x762 <vfprintf+0x24e>
 75c:	88 37       	cpi	r24, 0x78	; 120
 75e:	21 f0       	breq	.+8      	; 0x768 <vfprintf+0x254>
 760:	b0 c0       	rjmp	.+352    	; 0x8c2 <vfprintf+0x3ae>
 762:	e9 2f       	mov	r30, r25
 764:	e0 61       	ori	r30, 0x10	; 16
 766:	be 2e       	mov	r11, r30
 768:	b4 fe       	sbrs	r11, 4
 76a:	0d c0       	rjmp	.+26     	; 0x786 <vfprintf+0x272>
 76c:	fb 2d       	mov	r31, r11
 76e:	f4 60       	ori	r31, 0x04	; 4
 770:	bf 2e       	mov	r11, r31
 772:	09 c0       	rjmp	.+18     	; 0x786 <vfprintf+0x272>
 774:	34 fe       	sbrs	r3, 4
 776:	0a c0       	rjmp	.+20     	; 0x78c <vfprintf+0x278>
 778:	29 2f       	mov	r18, r25
 77a:	26 60       	ori	r18, 0x06	; 6
 77c:	b2 2e       	mov	r11, r18
 77e:	06 c0       	rjmp	.+12     	; 0x78c <vfprintf+0x278>
 780:	28 e0       	ldi	r18, 0x08	; 8
 782:	30 e0       	ldi	r19, 0x00	; 0
 784:	05 c0       	rjmp	.+10     	; 0x790 <vfprintf+0x27c>
 786:	20 e1       	ldi	r18, 0x10	; 16
 788:	30 e0       	ldi	r19, 0x00	; 0
 78a:	02 c0       	rjmp	.+4      	; 0x790 <vfprintf+0x27c>
 78c:	20 e1       	ldi	r18, 0x10	; 16
 78e:	32 e0       	ldi	r19, 0x02	; 2
 790:	f8 01       	movw	r30, r16
 792:	b7 fe       	sbrs	r11, 7
 794:	07 c0       	rjmp	.+14     	; 0x7a4 <vfprintf+0x290>
 796:	60 81       	ld	r22, Z
 798:	71 81       	ldd	r23, Z+1	; 0x01
 79a:	82 81       	ldd	r24, Z+2	; 0x02
 79c:	93 81       	ldd	r25, Z+3	; 0x03
 79e:	0c 5f       	subi	r16, 0xFC	; 252
 7a0:	1f 4f       	sbci	r17, 0xFF	; 255
 7a2:	06 c0       	rjmp	.+12     	; 0x7b0 <vfprintf+0x29c>
 7a4:	60 81       	ld	r22, Z
 7a6:	71 81       	ldd	r23, Z+1	; 0x01
 7a8:	80 e0       	ldi	r24, 0x00	; 0
 7aa:	90 e0       	ldi	r25, 0x00	; 0
 7ac:	0e 5f       	subi	r16, 0xFE	; 254
 7ae:	1f 4f       	sbci	r17, 0xFF	; 255
 7b0:	a3 01       	movw	r20, r6
 7b2:	0e 94 bd 04 	call	0x97a	; 0x97a <__ultoa_invert>
 7b6:	88 2e       	mov	r8, r24
 7b8:	86 18       	sub	r8, r6
 7ba:	fb 2d       	mov	r31, r11
 7bc:	ff 77       	andi	r31, 0x7F	; 127
 7be:	3f 2e       	mov	r3, r31
 7c0:	36 fe       	sbrs	r3, 6
 7c2:	0d c0       	rjmp	.+26     	; 0x7de <vfprintf+0x2ca>
 7c4:	23 2d       	mov	r18, r3
 7c6:	2e 7f       	andi	r18, 0xFE	; 254
 7c8:	a2 2e       	mov	r10, r18
 7ca:	89 14       	cp	r8, r9
 7cc:	58 f4       	brcc	.+22     	; 0x7e4 <vfprintf+0x2d0>
 7ce:	34 fe       	sbrs	r3, 4
 7d0:	0b c0       	rjmp	.+22     	; 0x7e8 <vfprintf+0x2d4>
 7d2:	32 fc       	sbrc	r3, 2
 7d4:	09 c0       	rjmp	.+18     	; 0x7e8 <vfprintf+0x2d4>
 7d6:	83 2d       	mov	r24, r3
 7d8:	8e 7e       	andi	r24, 0xEE	; 238
 7da:	a8 2e       	mov	r10, r24
 7dc:	05 c0       	rjmp	.+10     	; 0x7e8 <vfprintf+0x2d4>
 7de:	b8 2c       	mov	r11, r8
 7e0:	a3 2c       	mov	r10, r3
 7e2:	03 c0       	rjmp	.+6      	; 0x7ea <vfprintf+0x2d6>
 7e4:	b8 2c       	mov	r11, r8
 7e6:	01 c0       	rjmp	.+2      	; 0x7ea <vfprintf+0x2d6>
 7e8:	b9 2c       	mov	r11, r9
 7ea:	a4 fe       	sbrs	r10, 4
 7ec:	0f c0       	rjmp	.+30     	; 0x80c <vfprintf+0x2f8>
 7ee:	fe 01       	movw	r30, r28
 7f0:	e8 0d       	add	r30, r8
 7f2:	f1 1d       	adc	r31, r1
 7f4:	80 81       	ld	r24, Z
 7f6:	80 33       	cpi	r24, 0x30	; 48
 7f8:	21 f4       	brne	.+8      	; 0x802 <vfprintf+0x2ee>
 7fa:	9a 2d       	mov	r25, r10
 7fc:	99 7e       	andi	r25, 0xE9	; 233
 7fe:	a9 2e       	mov	r10, r25
 800:	09 c0       	rjmp	.+18     	; 0x814 <vfprintf+0x300>
 802:	a2 fe       	sbrs	r10, 2
 804:	06 c0       	rjmp	.+12     	; 0x812 <vfprintf+0x2fe>
 806:	b3 94       	inc	r11
 808:	b3 94       	inc	r11
 80a:	04 c0       	rjmp	.+8      	; 0x814 <vfprintf+0x300>
 80c:	8a 2d       	mov	r24, r10
 80e:	86 78       	andi	r24, 0x86	; 134
 810:	09 f0       	breq	.+2      	; 0x814 <vfprintf+0x300>
 812:	b3 94       	inc	r11
 814:	a3 fc       	sbrc	r10, 3
 816:	11 c0       	rjmp	.+34     	; 0x83a <vfprintf+0x326>
 818:	a0 fe       	sbrs	r10, 0
 81a:	06 c0       	rjmp	.+12     	; 0x828 <vfprintf+0x314>
 81c:	b2 14       	cp	r11, r2
 81e:	88 f4       	brcc	.+34     	; 0x842 <vfprintf+0x32e>
 820:	28 0c       	add	r2, r8
 822:	92 2c       	mov	r9, r2
 824:	9b 18       	sub	r9, r11
 826:	0e c0       	rjmp	.+28     	; 0x844 <vfprintf+0x330>
 828:	b2 14       	cp	r11, r2
 82a:	60 f4       	brcc	.+24     	; 0x844 <vfprintf+0x330>
 82c:	b6 01       	movw	r22, r12
 82e:	80 e2       	ldi	r24, 0x20	; 32
 830:	90 e0       	ldi	r25, 0x00	; 0
 832:	0e 94 81 04 	call	0x902	; 0x902 <fputc>
 836:	b3 94       	inc	r11
 838:	f7 cf       	rjmp	.-18     	; 0x828 <vfprintf+0x314>
 83a:	b2 14       	cp	r11, r2
 83c:	18 f4       	brcc	.+6      	; 0x844 <vfprintf+0x330>
 83e:	2b 18       	sub	r2, r11
 840:	02 c0       	rjmp	.+4      	; 0x846 <vfprintf+0x332>
 842:	98 2c       	mov	r9, r8
 844:	21 2c       	mov	r2, r1
 846:	a4 fe       	sbrs	r10, 4
 848:	10 c0       	rjmp	.+32     	; 0x86a <vfprintf+0x356>
 84a:	b6 01       	movw	r22, r12
 84c:	80 e3       	ldi	r24, 0x30	; 48
 84e:	90 e0       	ldi	r25, 0x00	; 0
 850:	0e 94 81 04 	call	0x902	; 0x902 <fputc>
 854:	a2 fe       	sbrs	r10, 2
 856:	17 c0       	rjmp	.+46     	; 0x886 <vfprintf+0x372>
 858:	a1 fc       	sbrc	r10, 1
 85a:	03 c0       	rjmp	.+6      	; 0x862 <vfprintf+0x34e>
 85c:	88 e7       	ldi	r24, 0x78	; 120
 85e:	90 e0       	ldi	r25, 0x00	; 0
 860:	02 c0       	rjmp	.+4      	; 0x866 <vfprintf+0x352>
 862:	88 e5       	ldi	r24, 0x58	; 88
 864:	90 e0       	ldi	r25, 0x00	; 0
 866:	b6 01       	movw	r22, r12
 868:	0c c0       	rjmp	.+24     	; 0x882 <vfprintf+0x36e>
 86a:	8a 2d       	mov	r24, r10
 86c:	86 78       	andi	r24, 0x86	; 134
 86e:	59 f0       	breq	.+22     	; 0x886 <vfprintf+0x372>
 870:	a1 fe       	sbrs	r10, 1
 872:	02 c0       	rjmp	.+4      	; 0x878 <vfprintf+0x364>
 874:	8b e2       	ldi	r24, 0x2B	; 43
 876:	01 c0       	rjmp	.+2      	; 0x87a <vfprintf+0x366>
 878:	80 e2       	ldi	r24, 0x20	; 32
 87a:	a7 fc       	sbrc	r10, 7
 87c:	8d e2       	ldi	r24, 0x2D	; 45
 87e:	b6 01       	movw	r22, r12
 880:	90 e0       	ldi	r25, 0x00	; 0
 882:	0e 94 81 04 	call	0x902	; 0x902 <fputc>
 886:	89 14       	cp	r8, r9
 888:	38 f4       	brcc	.+14     	; 0x898 <vfprintf+0x384>
 88a:	b6 01       	movw	r22, r12
 88c:	80 e3       	ldi	r24, 0x30	; 48
 88e:	90 e0       	ldi	r25, 0x00	; 0
 890:	0e 94 81 04 	call	0x902	; 0x902 <fputc>
 894:	9a 94       	dec	r9
 896:	f7 cf       	rjmp	.-18     	; 0x886 <vfprintf+0x372>
 898:	8a 94       	dec	r8
 89a:	f3 01       	movw	r30, r6
 89c:	e8 0d       	add	r30, r8
 89e:	f1 1d       	adc	r31, r1
 8a0:	80 81       	ld	r24, Z
 8a2:	b6 01       	movw	r22, r12
 8a4:	90 e0       	ldi	r25, 0x00	; 0
 8a6:	0e 94 81 04 	call	0x902	; 0x902 <fputc>
 8aa:	81 10       	cpse	r8, r1
 8ac:	f5 cf       	rjmp	.-22     	; 0x898 <vfprintf+0x384>
 8ae:	22 20       	and	r2, r2
 8b0:	09 f4       	brne	.+2      	; 0x8b4 <vfprintf+0x3a0>
 8b2:	42 ce       	rjmp	.-892    	; 0x538 <vfprintf+0x24>
 8b4:	b6 01       	movw	r22, r12
 8b6:	80 e2       	ldi	r24, 0x20	; 32
 8b8:	90 e0       	ldi	r25, 0x00	; 0
 8ba:	0e 94 81 04 	call	0x902	; 0x902 <fputc>
 8be:	2a 94       	dec	r2
 8c0:	f6 cf       	rjmp	.-20     	; 0x8ae <vfprintf+0x39a>
 8c2:	f6 01       	movw	r30, r12
 8c4:	86 81       	ldd	r24, Z+6	; 0x06
 8c6:	97 81       	ldd	r25, Z+7	; 0x07
 8c8:	02 c0       	rjmp	.+4      	; 0x8ce <vfprintf+0x3ba>
 8ca:	8f ef       	ldi	r24, 0xFF	; 255
 8cc:	9f ef       	ldi	r25, 0xFF	; 255
 8ce:	2b 96       	adiw	r28, 0x0b	; 11
 8d0:	e2 e1       	ldi	r30, 0x12	; 18
 8d2:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__epilogue_restores__>

000008d6 <strnlen_P>:
 8d6:	fc 01       	movw	r30, r24
 8d8:	05 90       	lpm	r0, Z+
 8da:	61 50       	subi	r22, 0x01	; 1
 8dc:	70 40       	sbci	r23, 0x00	; 0
 8de:	01 10       	cpse	r0, r1
 8e0:	d8 f7       	brcc	.-10     	; 0x8d8 <strnlen_P+0x2>
 8e2:	80 95       	com	r24
 8e4:	90 95       	com	r25
 8e6:	8e 0f       	add	r24, r30
 8e8:	9f 1f       	adc	r25, r31
 8ea:	08 95       	ret

000008ec <strnlen>:
 8ec:	fc 01       	movw	r30, r24
 8ee:	61 50       	subi	r22, 0x01	; 1
 8f0:	70 40       	sbci	r23, 0x00	; 0
 8f2:	01 90       	ld	r0, Z+
 8f4:	01 10       	cpse	r0, r1
 8f6:	d8 f7       	brcc	.-10     	; 0x8ee <strnlen+0x2>
 8f8:	80 95       	com	r24
 8fa:	90 95       	com	r25
 8fc:	8e 0f       	add	r24, r30
 8fe:	9f 1f       	adc	r25, r31
 900:	08 95       	ret

00000902 <fputc>:
 902:	0f 93       	push	r16
 904:	1f 93       	push	r17
 906:	cf 93       	push	r28
 908:	df 93       	push	r29
 90a:	fb 01       	movw	r30, r22
 90c:	23 81       	ldd	r18, Z+3	; 0x03
 90e:	21 fd       	sbrc	r18, 1
 910:	03 c0       	rjmp	.+6      	; 0x918 <fputc+0x16>
 912:	8f ef       	ldi	r24, 0xFF	; 255
 914:	9f ef       	ldi	r25, 0xFF	; 255
 916:	2c c0       	rjmp	.+88     	; 0x970 <fputc+0x6e>
 918:	22 ff       	sbrs	r18, 2
 91a:	16 c0       	rjmp	.+44     	; 0x948 <fputc+0x46>
 91c:	46 81       	ldd	r20, Z+6	; 0x06
 91e:	57 81       	ldd	r21, Z+7	; 0x07
 920:	24 81       	ldd	r18, Z+4	; 0x04
 922:	35 81       	ldd	r19, Z+5	; 0x05
 924:	42 17       	cp	r20, r18
 926:	53 07       	cpc	r21, r19
 928:	44 f4       	brge	.+16     	; 0x93a <fputc+0x38>
 92a:	a0 81       	ld	r26, Z
 92c:	b1 81       	ldd	r27, Z+1	; 0x01
 92e:	9d 01       	movw	r18, r26
 930:	2f 5f       	subi	r18, 0xFF	; 255
 932:	3f 4f       	sbci	r19, 0xFF	; 255
 934:	31 83       	std	Z+1, r19	; 0x01
 936:	20 83       	st	Z, r18
 938:	8c 93       	st	X, r24
 93a:	26 81       	ldd	r18, Z+6	; 0x06
 93c:	37 81       	ldd	r19, Z+7	; 0x07
 93e:	2f 5f       	subi	r18, 0xFF	; 255
 940:	3f 4f       	sbci	r19, 0xFF	; 255
 942:	37 83       	std	Z+7, r19	; 0x07
 944:	26 83       	std	Z+6, r18	; 0x06
 946:	14 c0       	rjmp	.+40     	; 0x970 <fputc+0x6e>
 948:	8b 01       	movw	r16, r22
 94a:	ec 01       	movw	r28, r24
 94c:	fb 01       	movw	r30, r22
 94e:	00 84       	ldd	r0, Z+8	; 0x08
 950:	f1 85       	ldd	r31, Z+9	; 0x09
 952:	e0 2d       	mov	r30, r0
 954:	09 95       	icall
 956:	89 2b       	or	r24, r25
 958:	e1 f6       	brne	.-72     	; 0x912 <fputc+0x10>
 95a:	d8 01       	movw	r26, r16
 95c:	16 96       	adiw	r26, 0x06	; 6
 95e:	8d 91       	ld	r24, X+
 960:	9c 91       	ld	r25, X
 962:	17 97       	sbiw	r26, 0x07	; 7
 964:	01 96       	adiw	r24, 0x01	; 1
 966:	17 96       	adiw	r26, 0x07	; 7
 968:	9c 93       	st	X, r25
 96a:	8e 93       	st	-X, r24
 96c:	16 97       	sbiw	r26, 0x06	; 6
 96e:	ce 01       	movw	r24, r28
 970:	df 91       	pop	r29
 972:	cf 91       	pop	r28
 974:	1f 91       	pop	r17
 976:	0f 91       	pop	r16
 978:	08 95       	ret

0000097a <__ultoa_invert>:
 97a:	fa 01       	movw	r30, r20
 97c:	aa 27       	eor	r26, r26
 97e:	28 30       	cpi	r18, 0x08	; 8
 980:	51 f1       	breq	.+84     	; 0x9d6 <__ultoa_invert+0x5c>
 982:	20 31       	cpi	r18, 0x10	; 16
 984:	81 f1       	breq	.+96     	; 0x9e6 <__ultoa_invert+0x6c>
 986:	e8 94       	clt
 988:	6f 93       	push	r22
 98a:	6e 7f       	andi	r22, 0xFE	; 254
 98c:	6e 5f       	subi	r22, 0xFE	; 254
 98e:	7f 4f       	sbci	r23, 0xFF	; 255
 990:	8f 4f       	sbci	r24, 0xFF	; 255
 992:	9f 4f       	sbci	r25, 0xFF	; 255
 994:	af 4f       	sbci	r26, 0xFF	; 255
 996:	b1 e0       	ldi	r27, 0x01	; 1
 998:	3e d0       	rcall	.+124    	; 0xa16 <__ultoa_invert+0x9c>
 99a:	b4 e0       	ldi	r27, 0x04	; 4
 99c:	3c d0       	rcall	.+120    	; 0xa16 <__ultoa_invert+0x9c>
 99e:	67 0f       	add	r22, r23
 9a0:	78 1f       	adc	r23, r24
 9a2:	89 1f       	adc	r24, r25
 9a4:	9a 1f       	adc	r25, r26
 9a6:	a1 1d       	adc	r26, r1
 9a8:	68 0f       	add	r22, r24
 9aa:	79 1f       	adc	r23, r25
 9ac:	8a 1f       	adc	r24, r26
 9ae:	91 1d       	adc	r25, r1
 9b0:	a1 1d       	adc	r26, r1
 9b2:	6a 0f       	add	r22, r26
 9b4:	71 1d       	adc	r23, r1
 9b6:	81 1d       	adc	r24, r1
 9b8:	91 1d       	adc	r25, r1
 9ba:	a1 1d       	adc	r26, r1
 9bc:	20 d0       	rcall	.+64     	; 0x9fe <__ultoa_invert+0x84>
 9be:	09 f4       	brne	.+2      	; 0x9c2 <__ultoa_invert+0x48>
 9c0:	68 94       	set
 9c2:	3f 91       	pop	r19
 9c4:	2a e0       	ldi	r18, 0x0A	; 10
 9c6:	26 9f       	mul	r18, r22
 9c8:	11 24       	eor	r1, r1
 9ca:	30 19       	sub	r19, r0
 9cc:	30 5d       	subi	r19, 0xD0	; 208
 9ce:	31 93       	st	Z+, r19
 9d0:	de f6       	brtc	.-74     	; 0x988 <__ultoa_invert+0xe>
 9d2:	cf 01       	movw	r24, r30
 9d4:	08 95       	ret
 9d6:	46 2f       	mov	r20, r22
 9d8:	47 70       	andi	r20, 0x07	; 7
 9da:	40 5d       	subi	r20, 0xD0	; 208
 9dc:	41 93       	st	Z+, r20
 9de:	b3 e0       	ldi	r27, 0x03	; 3
 9e0:	0f d0       	rcall	.+30     	; 0xa00 <__ultoa_invert+0x86>
 9e2:	c9 f7       	brne	.-14     	; 0x9d6 <__ultoa_invert+0x5c>
 9e4:	f6 cf       	rjmp	.-20     	; 0x9d2 <__ultoa_invert+0x58>
 9e6:	46 2f       	mov	r20, r22
 9e8:	4f 70       	andi	r20, 0x0F	; 15
 9ea:	40 5d       	subi	r20, 0xD0	; 208
 9ec:	4a 33       	cpi	r20, 0x3A	; 58
 9ee:	18 f0       	brcs	.+6      	; 0x9f6 <__ultoa_invert+0x7c>
 9f0:	49 5d       	subi	r20, 0xD9	; 217
 9f2:	31 fd       	sbrc	r19, 1
 9f4:	40 52       	subi	r20, 0x20	; 32
 9f6:	41 93       	st	Z+, r20
 9f8:	02 d0       	rcall	.+4      	; 0x9fe <__ultoa_invert+0x84>
 9fa:	a9 f7       	brne	.-22     	; 0x9e6 <__ultoa_invert+0x6c>
 9fc:	ea cf       	rjmp	.-44     	; 0x9d2 <__ultoa_invert+0x58>
 9fe:	b4 e0       	ldi	r27, 0x04	; 4
 a00:	a6 95       	lsr	r26
 a02:	97 95       	ror	r25
 a04:	87 95       	ror	r24
 a06:	77 95       	ror	r23
 a08:	67 95       	ror	r22
 a0a:	ba 95       	dec	r27
 a0c:	c9 f7       	brne	.-14     	; 0xa00 <__ultoa_invert+0x86>
 a0e:	00 97       	sbiw	r24, 0x00	; 0
 a10:	61 05       	cpc	r22, r1
 a12:	71 05       	cpc	r23, r1
 a14:	08 95       	ret
 a16:	9b 01       	movw	r18, r22
 a18:	ac 01       	movw	r20, r24
 a1a:	0a 2e       	mov	r0, r26
 a1c:	06 94       	lsr	r0
 a1e:	57 95       	ror	r21
 a20:	47 95       	ror	r20
 a22:	37 95       	ror	r19
 a24:	27 95       	ror	r18
 a26:	ba 95       	dec	r27
 a28:	c9 f7       	brne	.-14     	; 0xa1c <__ultoa_invert+0xa2>
 a2a:	62 0f       	add	r22, r18
 a2c:	73 1f       	adc	r23, r19
 a2e:	84 1f       	adc	r24, r20
 a30:	95 1f       	adc	r25, r21
 a32:	a0 1d       	adc	r26, r0
 a34:	08 95       	ret

00000a36 <__prologue_saves__>:
 a36:	2f 92       	push	r2
 a38:	3f 92       	push	r3
 a3a:	4f 92       	push	r4
 a3c:	5f 92       	push	r5
 a3e:	6f 92       	push	r6
 a40:	7f 92       	push	r7
 a42:	8f 92       	push	r8
 a44:	9f 92       	push	r9
 a46:	af 92       	push	r10
 a48:	bf 92       	push	r11
 a4a:	cf 92       	push	r12
 a4c:	df 92       	push	r13
 a4e:	ef 92       	push	r14
 a50:	ff 92       	push	r15
 a52:	0f 93       	push	r16
 a54:	1f 93       	push	r17
 a56:	cf 93       	push	r28
 a58:	df 93       	push	r29
 a5a:	cd b7       	in	r28, 0x3d	; 61
 a5c:	de b7       	in	r29, 0x3e	; 62
 a5e:	ca 1b       	sub	r28, r26
 a60:	db 0b       	sbc	r29, r27
 a62:	0f b6       	in	r0, 0x3f	; 63
 a64:	f8 94       	cli
 a66:	de bf       	out	0x3e, r29	; 62
 a68:	0f be       	out	0x3f, r0	; 63
 a6a:	cd bf       	out	0x3d, r28	; 61
 a6c:	09 94       	ijmp

00000a6e <__epilogue_restores__>:
 a6e:	2a 88       	ldd	r2, Y+18	; 0x12
 a70:	39 88       	ldd	r3, Y+17	; 0x11
 a72:	48 88       	ldd	r4, Y+16	; 0x10
 a74:	5f 84       	ldd	r5, Y+15	; 0x0f
 a76:	6e 84       	ldd	r6, Y+14	; 0x0e
 a78:	7d 84       	ldd	r7, Y+13	; 0x0d
 a7a:	8c 84       	ldd	r8, Y+12	; 0x0c
 a7c:	9b 84       	ldd	r9, Y+11	; 0x0b
 a7e:	aa 84       	ldd	r10, Y+10	; 0x0a
 a80:	b9 84       	ldd	r11, Y+9	; 0x09
 a82:	c8 84       	ldd	r12, Y+8	; 0x08
 a84:	df 80       	ldd	r13, Y+7	; 0x07
 a86:	ee 80       	ldd	r14, Y+6	; 0x06
 a88:	fd 80       	ldd	r15, Y+5	; 0x05
 a8a:	0c 81       	ldd	r16, Y+4	; 0x04
 a8c:	1b 81       	ldd	r17, Y+3	; 0x03
 a8e:	aa 81       	ldd	r26, Y+2	; 0x02
 a90:	b9 81       	ldd	r27, Y+1	; 0x01
 a92:	ce 0f       	add	r28, r30
 a94:	d1 1d       	adc	r29, r1
 a96:	0f b6       	in	r0, 0x3f	; 63
 a98:	f8 94       	cli
 a9a:	de bf       	out	0x3e, r29	; 62
 a9c:	0f be       	out	0x3f, r0	; 63
 a9e:	cd bf       	out	0x3d, r28	; 61
 aa0:	ed 01       	movw	r28, r26
 aa2:	08 95       	ret

00000aa4 <_exit>:
 aa4:	f8 94       	cli

00000aa6 <__stop_program>:
 aa6:	ff cf       	rjmp	.-2      	; 0xaa6 <__stop_program>
