
AVRADV2_PWMRGB.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001d6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000182  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001d6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000208  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000248  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a05  00000000  00000000  00000270  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000917  00000000  00000000  00000c75  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000030a  00000000  00000000  0000158c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00001898  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000483  00000000  00000000  000018cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000078  00000000  00000000  00001d4f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001dc7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
   8:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
   c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  10:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  14:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  18:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  1c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  20:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  24:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  28:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  2c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  30:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  34:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  38:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  3c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  40:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  44:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  48:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  4c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  50:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  54:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  58:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  5c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  60:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  64:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  68:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  6c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  70:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  74:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  78:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  7c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  80:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  84:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  88:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  8c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  90:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  94:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  98:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  9c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  a0:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  a4:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  a8:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  ac:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  b0:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61
  c0:	0e 94 66 00 	call	0xcc	; 0xcc <main>
  c4:	0c 94 bf 00 	jmp	0x17e	; 0x17e <_exit>

000000c8 <__bad_interrupt>:
  c8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000cc <main>:
#include <util/delay.h>
void rgb_renk (unsigned int kirmizi, unsigned int yesil, unsigned int mavi);
int main(void)
{
    // PWM Kanallarý Çýkýþ 
	DDRB |= (1<<PORTB1);
  cc:	21 9a       	sbi	0x04, 1	; 4
	DDRD |= ((1<<PORTD0) | (1<<PORTD1));
  ce:	8a b1       	in	r24, 0x0a	; 10
  d0:	83 60       	ori	r24, 0x03	; 3
  d2:	8a b9       	out	0x0a, r24	; 10
	////////
	TCCR1A|=((1<<COM1A1) ); 
  d4:	e0 e8       	ldi	r30, 0x80	; 128
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	80 81       	ld	r24, Z
  da:	80 68       	ori	r24, 0x80	; 128
  dc:	80 83       	st	Z, r24
	TCCR1B|=(1<<WGM13); 
  de:	e1 e8       	ldi	r30, 0x81	; 129
  e0:	f0 e0       	ldi	r31, 0x00	; 0
  e2:	80 81       	ld	r24, Z
  e4:	80 61       	ori	r24, 0x10	; 16
  e6:	80 83       	st	Z, r24
	TCCR1B|=(1<<CS10);
  e8:	80 81       	ld	r24, Z
  ea:	81 60       	ori	r24, 0x01	; 1
  ec:	80 83       	st	Z, r24
	ICR1=65535;
  ee:	8f ef       	ldi	r24, 0xFF	; 255
  f0:	9f ef       	ldi	r25, 0xFF	; 255
  f2:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
  f6:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
	OCR1A=0; 
  fa:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
  fe:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
	/////////////
	TCCR3A|=((1<<COM3A1) ); 
 102:	e0 e9       	ldi	r30, 0x90	; 144
 104:	f0 e0       	ldi	r31, 0x00	; 0
 106:	20 81       	ld	r18, Z
 108:	20 68       	ori	r18, 0x80	; 128
 10a:	20 83       	st	Z, r18
	TCCR3B|=(1<<WGM13); 
 10c:	e1 e9       	ldi	r30, 0x91	; 145
 10e:	f0 e0       	ldi	r31, 0x00	; 0
 110:	20 81       	ld	r18, Z
 112:	20 61       	ori	r18, 0x10	; 16
 114:	20 83       	st	Z, r18
	TCCR3B|=(1<<CS10); 
 116:	20 81       	ld	r18, Z
 118:	21 60       	ori	r18, 0x01	; 1
 11a:	20 83       	st	Z, r18
	ICR3=65535; 
 11c:	90 93 97 00 	sts	0x0097, r25	; 0x800097 <__DATA_REGION_ORIGIN__+0x37>
 120:	80 93 96 00 	sts	0x0096, r24	; 0x800096 <__DATA_REGION_ORIGIN__+0x36>
	OCR3A=0; 
 124:	10 92 99 00 	sts	0x0099, r1	; 0x800099 <__DATA_REGION_ORIGIN__+0x39>
 128:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__DATA_REGION_ORIGIN__+0x38>
	/////////////////
	TCCR4A|=((1<<COM4A1) );
 12c:	e0 ea       	ldi	r30, 0xA0	; 160
 12e:	f0 e0       	ldi	r31, 0x00	; 0
 130:	20 81       	ld	r18, Z
 132:	20 68       	ori	r18, 0x80	; 128
 134:	20 83       	st	Z, r18
	TCCR4B|=(1<<WGM13); 
 136:	e1 ea       	ldi	r30, 0xA1	; 161
 138:	f0 e0       	ldi	r31, 0x00	; 0
 13a:	20 81       	ld	r18, Z
 13c:	20 61       	ori	r18, 0x10	; 16
 13e:	20 83       	st	Z, r18
	TCCR4B|=(1<<CS10); 
 140:	20 81       	ld	r18, Z
 142:	21 60       	ori	r18, 0x01	; 1
 144:	20 83       	st	Z, r18
	ICR4=65535; 
 146:	90 93 a7 00 	sts	0x00A7, r25	; 0x8000a7 <__DATA_REGION_ORIGIN__+0x47>
 14a:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__DATA_REGION_ORIGIN__+0x46>
	OCR4A=0; 
 14e:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__DATA_REGION_ORIGIN__+0x49>
 152:	10 92 a8 00 	sts	0x00A8, r1	; 0x8000a8 <__DATA_REGION_ORIGIN__+0x48>
{
	kirmizi = kirmizi << 8;
	yesil = yesil << 8;
	mavi = mavi << 8;
	// rgb() uyumu
	OCR1A = kirmizi;
 156:	c8 e8       	ldi	r28, 0x88	; 136
 158:	d0 e0       	ldi	r29, 0x00	; 0
 15a:	40 e0       	ldi	r20, 0x00	; 0
 15c:	53 e3       	ldi	r21, 0x33	; 51
	OCR3A = yesil;
 15e:	a8 e9       	ldi	r26, 0x98	; 152
 160:	b0 e0       	ldi	r27, 0x00	; 0
 162:	20 e0       	ldi	r18, 0x00	; 0
 164:	35 e2       	ldi	r19, 0x25	; 37
	OCR4A = mavi;
 166:	e8 ea       	ldi	r30, 0xA8	; 168
 168:	f0 e0       	ldi	r31, 0x00	; 0
 16a:	80 e0       	ldi	r24, 0x00	; 0
 16c:	91 e3       	ldi	r25, 0x31	; 49
{
	kirmizi = kirmizi << 8;
	yesil = yesil << 8;
	mavi = mavi << 8;
	// rgb() uyumu
	OCR1A = kirmizi;
 16e:	59 83       	std	Y+1, r21	; 0x01
 170:	48 83       	st	Y, r20
	OCR3A = yesil;
 172:	11 96       	adiw	r26, 0x01	; 1
 174:	3c 93       	st	X, r19
 176:	2e 93       	st	-X, r18
	OCR4A = mavi;
 178:	91 83       	std	Z+1, r25	; 0x01
 17a:	80 83       	st	Z, r24
 17c:	f8 cf       	rjmp	.-16     	; 0x16e <main+0xa2>

0000017e <_exit>:
 17e:	f8 94       	cli

00000180 <__stop_program>:
 180:	ff cf       	rjmp	.-2      	; 0x180 <__stop_program>
