
AVDADV30_BitfieldArduino.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000124  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000d0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000124  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000154  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000194  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000723  00000000  00000000  000001b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000061a  00000000  00000000  000008d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000021c  00000000  00000000  00000ef1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001110  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003a6  00000000  00000000  00001134  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  000014da  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 66 00 	jmp	0xcc	; 0xcc <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#include "bitfieldarduino.h"

int main(void)
{
	// Düðmeler
    D2_pinMode = INPUT;
  80:	8a b1       	in	r24, 0x0a	; 10
  82:	8b 7f       	andi	r24, 0xFB	; 251
  84:	8a b9       	out	0x0a, r24	; 10
	D3_pinMode = INPUT;
  86:	8a b1       	in	r24, 0x0a	; 10
  88:	87 7f       	andi	r24, 0xF7	; 247
  8a:	8a b9       	out	0x0a, r24	; 10
	D2_pullUp = PULL_UP;
  8c:	8b b1       	in	r24, 0x0b	; 11
  8e:	84 60       	ori	r24, 0x04	; 4
  90:	8b b9       	out	0x0b, r24	; 11
	D3_pullUp = PULL_UP;
  92:	8b b1       	in	r24, 0x0b	; 11
  94:	88 60       	ori	r24, 0x08	; 8
  96:	8b b9       	out	0x0b, r24	; 11
	// Ledler
	D4_pinMode = OUTPUT;
  98:	8a b1       	in	r24, 0x0a	; 10
  9a:	80 61       	ori	r24, 0x10	; 16
  9c:	8a b9       	out	0x0a, r24	; 10
	D5_pinMode = OUTPUT;
  9e:	8a b1       	in	r24, 0x0a	; 10
  a0:	80 62       	ori	r24, 0x20	; 32
  a2:	8a b9       	out	0x0a, r24	; 10
    while (1) 
    {
	   D4_digitalWrite = !D2_digitalRead;
  a4:	89 b1       	in	r24, 0x09	; 9
  a6:	82 fb       	bst	r24, 2
  a8:	88 27       	eor	r24, r24
  aa:	80 f9       	bld	r24, 0
  ac:	91 e0       	ldi	r25, 0x01	; 1
  ae:	89 27       	eor	r24, r25
  b0:	2b b1       	in	r18, 0x0b	; 11
  b2:	80 fb       	bst	r24, 0
  b4:	24 f9       	bld	r18, 4
  b6:	2b b9       	out	0x0b, r18	; 11
	   D5_digitalWrite = !D3_digitalRead;
  b8:	89 b1       	in	r24, 0x09	; 9
  ba:	83 fb       	bst	r24, 3
  bc:	88 27       	eor	r24, r24
  be:	80 f9       	bld	r24, 0
  c0:	98 27       	eor	r25, r24
  c2:	8b b1       	in	r24, 0x0b	; 11
  c4:	90 fb       	bst	r25, 0
  c6:	85 f9       	bld	r24, 5
  c8:	8b b9       	out	0x0b, r24	; 11
  ca:	ec cf       	rjmp	.-40     	; 0xa4 <main+0x24>

000000cc <_exit>:
  cc:	f8 94       	cli

000000ce <__stop_program>:
  ce:	ff cf       	rjmp	.-2      	; 0xce <__stop_program>
