
AVRADV20_MAX7219MATRIX.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000238  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001e4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000238  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000268  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  000002a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ae5  00000000  00000000  00000328  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000800  00000000  00000000  00000e0d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004bf  00000000  00000000  0000160d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d8  00000000  00000000  00001acc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004a3  00000000  00000000  00001ba4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000331  00000000  00000000  00002047  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000090  00000000  00000000  00002378  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 68 00 	call	0xd0	; 0xd0 <main>
  78:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <max_send_byte>:
		max_send_byte(0x0C, 1);  // AÇ-KAPA
		max_clear_display();
}

 void max_send_byte(uint8_t addr,uint8_t data)
 {
  80:	cf 93       	push	r28
  82:	c6 2f       	mov	r28, r22
	 
	 PORTB &=~(1<<PORTB2);
  84:	2a 98       	cbi	0x05, 2	; 5
	 spi_transceive(addr);
  86:	0e 94 c2 00 	call	0x184	; 0x184 <spi_transceive>
	 spi_transceive(data);
  8a:	8c 2f       	mov	r24, r28
  8c:	0e 94 c2 00 	call	0x184	; 0x184 <spi_transceive>
	 PORTB |= (1<<PORTB2);
  90:	2a 9a       	sbi	0x05, 2	; 5
}
  92:	cf 91       	pop	r28
  94:	08 95       	ret

00000096 <max_clear_display>:

void max_clear_display()
{
  96:	cf 93       	push	r28
		char i = 8;
  98:	c8 e0       	ldi	r28, 0x08	; 8
		
		do {
		max_send_byte(i, 0xF);
  9a:	6f e0       	ldi	r22, 0x0F	; 15
  9c:	8c 2f       	mov	r24, r28
  9e:	0e 94 40 00 	call	0x80	; 0x80 <max_send_byte>
		} while (--i);
  a2:	c1 50       	subi	r28, 0x01	; 1
  a4:	d1 f7       	brne	.-12     	; 0x9a <max_clear_display+0x4>
}
  a6:	cf 91       	pop	r28
  a8:	08 95       	ret

000000aa <max_init>:
    
}

void max_init()
{
		max_send_byte(0x09, 0xFF);
  aa:	6f ef       	ldi	r22, 0xFF	; 255
  ac:	89 e0       	ldi	r24, 0x09	; 9
  ae:	0e 94 40 00 	call	0x80	; 0x80 <max_send_byte>
		max_send_byte(0x0B, 7); 
  b2:	67 e0       	ldi	r22, 0x07	; 7
  b4:	8b e0       	ldi	r24, 0x0B	; 11
  b6:	0e 94 40 00 	call	0x80	; 0x80 <max_send_byte>
		max_send_byte(0x0A, 0x00); // PARLAKLIK
  ba:	60 e0       	ldi	r22, 0x00	; 0
  bc:	8a e0       	ldi	r24, 0x0A	; 10
  be:	0e 94 40 00 	call	0x80	; 0x80 <max_send_byte>
		max_send_byte(0x0C, 1);  // AÇ-KAPA
  c2:	61 e0       	ldi	r22, 0x01	; 1
  c4:	8c e0       	ldi	r24, 0x0C	; 12
  c6:	0e 94 40 00 	call	0x80	; 0x80 <max_send_byte>
		max_clear_display();
  ca:	0e 94 4b 00 	call	0x96	; 0x96 <max_clear_display>
  ce:	08 95       	ret

000000d0 <main>:
void max_init();
void max_clear_display();
void max_digit(uint8_t digit, uint8_t value);
int main(void)
{
    spi_init(MASTER);
  d0:	81 e0       	ldi	r24, 0x01	; 1
  d2:	0e 94 ab 00 	call	0x156	; 0x156 <spi_init>
	max_init();
  d6:	0e 94 55 00 	call	0xaa	; 0xaa <max_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  da:	2f ef       	ldi	r18, 0xFF	; 255
  dc:	81 ee       	ldi	r24, 0xE1	; 225
  de:	94 e0       	ldi	r25, 0x04	; 4
  e0:	21 50       	subi	r18, 0x01	; 1
  e2:	80 40       	sbci	r24, 0x00	; 0
  e4:	90 40       	sbci	r25, 0x00	; 0
  e6:	e1 f7       	brne	.-8      	; 0xe0 <main+0x10>
  e8:	00 c0       	rjmp	.+0      	; 0xea <main+0x1a>
  ea:	00 00       	nop
	_delay_ms(100);
	int deger = 0;
    while (1) 
    {
	deger++;
  ec:	c1 e0       	ldi	r28, 0x01	; 1
  ee:	d0 e0       	ldi	r29, 0x00	; 0
		} while (--i);
}

void max_digit(uint8_t digit, uint8_t value)
{
	max_send_byte(digit, value);
  f0:	0a e0       	ldi	r16, 0x0A	; 10
  f2:	10 e0       	ldi	r17, 0x00	; 0
  f4:	0f 2e       	mov	r0, r31
  f6:	f4 e6       	ldi	r31, 0x64	; 100
  f8:	cf 2e       	mov	r12, r31
  fa:	d1 2c       	mov	r13, r1
  fc:	f0 2d       	mov	r31, r0
  fe:	02 c0       	rjmp	.+4      	; 0x104 <main+0x34>
	int deger = 0;
    while (1) 
    {
	deger++;
	if(deger > 999) 
	deger = 0;
 100:	c0 e0       	ldi	r28, 0x00	; 0
 102:	d0 e0       	ldi	r29, 0x00	; 0
		} while (--i);
}

void max_digit(uint8_t digit, uint8_t value)
{
	max_send_byte(digit, value);
 104:	ce 01       	movw	r24, r28
 106:	b8 01       	movw	r22, r16
 108:	0e 94 c8 00 	call	0x190	; 0x190 <__divmodhi4>
 10c:	7b 01       	movw	r14, r22
 10e:	68 2f       	mov	r22, r24
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	0e 94 40 00 	call	0x80	; 0x80 <max_send_byte>
 116:	c7 01       	movw	r24, r14
 118:	b8 01       	movw	r22, r16
 11a:	0e 94 c8 00 	call	0x190	; 0x190 <__divmodhi4>
 11e:	68 2f       	mov	r22, r24
 120:	82 e0       	ldi	r24, 0x02	; 2
 122:	0e 94 40 00 	call	0x80	; 0x80 <max_send_byte>
 126:	ce 01       	movw	r24, r28
 128:	b6 01       	movw	r22, r12
 12a:	0e 94 c8 00 	call	0x190	; 0x190 <__divmodhi4>
 12e:	83 e0       	ldi	r24, 0x03	; 3
 130:	0e 94 40 00 	call	0x80	; 0x80 <max_send_byte>
 134:	2f ef       	ldi	r18, 0xFF	; 255
 136:	84 e3       	ldi	r24, 0x34	; 52
 138:	9c e0       	ldi	r25, 0x0C	; 12
 13a:	21 50       	subi	r18, 0x01	; 1
 13c:	80 40       	sbci	r24, 0x00	; 0
 13e:	90 40       	sbci	r25, 0x00	; 0
 140:	e1 f7       	brne	.-8      	; 0x13a <main+0x6a>
 142:	00 c0       	rjmp	.+0      	; 0x144 <main+0x74>
 144:	00 00       	nop
	deger = 0;
	max_digit(1, deger % 10);
	max_digit(2, (deger / 10) % 10);
	max_digit(3, deger / 100);	
	_delay_ms(250);
	max_clear_display();
 146:	0e 94 4b 00 	call	0x96	; 0x96 <max_clear_display>
	max_init();
	_delay_ms(100);
	int deger = 0;
    while (1) 
    {
	deger++;
 14a:	21 96       	adiw	r28, 0x01	; 1
	if(deger > 999) 
 14c:	c8 3e       	cpi	r28, 0xE8	; 232
 14e:	23 e0       	ldi	r18, 0x03	; 3
 150:	d2 07       	cpc	r29, r18
 152:	b4 f6       	brge	.-84     	; 0x100 <main+0x30>
 154:	d7 cf       	rjmp	.-82     	; 0x104 <main+0x34>

00000156 <spi_init>:
 156:	9c b5       	in	r25, 0x2c	; 44
 158:	9f 7d       	andi	r25, 0xDF	; 223
 15a:	9c bd       	out	0x2c, r25	; 44
 15c:	81 11       	cpse	r24, r1
 15e:	04 c0       	rjmp	.+8      	; 0x168 <spi_init+0x12>
 160:	24 9a       	sbi	0x04, 4	; 4
 162:	80 e4       	ldi	r24, 0x40	; 64
 164:	8c bd       	out	0x2c, r24	; 44
 166:	08 95       	ret
 168:	84 b1       	in	r24, 0x04	; 4
 16a:	88 62       	ori	r24, 0x28	; 40
 16c:	84 b9       	out	0x04, r24	; 4
 16e:	22 9a       	sbi	0x04, 2	; 4
 170:	8c b5       	in	r24, 0x2c	; 44
 172:	80 65       	ori	r24, 0x50	; 80
 174:	8c bd       	out	0x2c, r24	; 44
 176:	8c b5       	in	r24, 0x2c	; 44
 178:	81 60       	ori	r24, 0x01	; 1
 17a:	8c bd       	out	0x2c, r24	; 44
 17c:	8d b5       	in	r24, 0x2d	; 45
 17e:	81 60       	ori	r24, 0x01	; 1
 180:	8d bd       	out	0x2d, r24	; 45
 182:	08 95       	ret

00000184 <spi_transceive>:
 184:	8e bd       	out	0x2e, r24	; 46
 186:	0d b4       	in	r0, 0x2d	; 45
 188:	07 fe       	sbrs	r0, 7
 18a:	fd cf       	rjmp	.-6      	; 0x186 <spi_transceive+0x2>
 18c:	8e b5       	in	r24, 0x2e	; 46
 18e:	08 95       	ret

00000190 <__divmodhi4>:
 190:	97 fb       	bst	r25, 7
 192:	07 2e       	mov	r0, r23
 194:	16 f4       	brtc	.+4      	; 0x19a <__divmodhi4+0xa>
 196:	00 94       	com	r0
 198:	07 d0       	rcall	.+14     	; 0x1a8 <__divmodhi4_neg1>
 19a:	77 fd       	sbrc	r23, 7
 19c:	09 d0       	rcall	.+18     	; 0x1b0 <__divmodhi4_neg2>
 19e:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <__udivmodhi4>
 1a2:	07 fc       	sbrc	r0, 7
 1a4:	05 d0       	rcall	.+10     	; 0x1b0 <__divmodhi4_neg2>
 1a6:	3e f4       	brtc	.+14     	; 0x1b6 <__divmodhi4_exit>

000001a8 <__divmodhi4_neg1>:
 1a8:	90 95       	com	r25
 1aa:	81 95       	neg	r24
 1ac:	9f 4f       	sbci	r25, 0xFF	; 255
 1ae:	08 95       	ret

000001b0 <__divmodhi4_neg2>:
 1b0:	70 95       	com	r23
 1b2:	61 95       	neg	r22
 1b4:	7f 4f       	sbci	r23, 0xFF	; 255

000001b6 <__divmodhi4_exit>:
 1b6:	08 95       	ret

000001b8 <__udivmodhi4>:
 1b8:	aa 1b       	sub	r26, r26
 1ba:	bb 1b       	sub	r27, r27
 1bc:	51 e1       	ldi	r21, 0x11	; 17
 1be:	07 c0       	rjmp	.+14     	; 0x1ce <__udivmodhi4_ep>

000001c0 <__udivmodhi4_loop>:
 1c0:	aa 1f       	adc	r26, r26
 1c2:	bb 1f       	adc	r27, r27
 1c4:	a6 17       	cp	r26, r22
 1c6:	b7 07       	cpc	r27, r23
 1c8:	10 f0       	brcs	.+4      	; 0x1ce <__udivmodhi4_ep>
 1ca:	a6 1b       	sub	r26, r22
 1cc:	b7 0b       	sbc	r27, r23

000001ce <__udivmodhi4_ep>:
 1ce:	88 1f       	adc	r24, r24
 1d0:	99 1f       	adc	r25, r25
 1d2:	5a 95       	dec	r21
 1d4:	a9 f7       	brne	.-22     	; 0x1c0 <__udivmodhi4_loop>
 1d6:	80 95       	com	r24
 1d8:	90 95       	com	r25
 1da:	bc 01       	movw	r22, r24
 1dc:	cd 01       	movw	r24, r26
 1de:	08 95       	ret

000001e0 <_exit>:
 1e0:	f8 94       	cli

000001e2 <__stop_program>:
 1e2:	ff cf       	rjmp	.-2      	; 0x1e2 <__stop_program>
